from modules import scripts, script_callbacks,shared
import gradio as gr
from nai_api_gen import nai_api

def script_setup():
    script_callbacks.on_ui_settings(on_ui_settings)

def on_ui_settings():
    section = ('nai_api', "NAI API Generator")
    def addopt(n,o):
        if not n in shared.opts.data_labels:
            shared.opts.add_option(n,o)
            
    addopt('nai_api_key', shared.OptionInfo('', "NAI API Key - See https://docs.sillytavern.app/usage/api-connections/novelai/ ", gr.Textbox, section=section))
    
    addopt('nai_api_skip_checks', shared.OptionInfo(False, "Skip NAI account/subscription/Anlas checks.",gr.Checkbox, section=section))
    
    addopt('nai_api_png_info', shared.OptionInfo( 'NAI Only', "Stealth PNG Info - Read/Write Stealth PNG info for NAI images only (required to emulate NAI), or All Images",gr.Radio, {"choices": ['NAI Only', 'All Images'] }, section=section))
    
    addopt('nai_api_default_sampler', shared.OptionInfo('k_euler', "Fallback Sampler: Used when the sampler doesn't match any sampler available in NAI .",gr.Radio, {"choices": nai_api.NAI_SAMPLERS }, section=section))
    
    addopt('nai_api_save_original', shared.OptionInfo(False, "Save Original NAI images before Post-Processing.",gr.Checkbox, section=section))
    
    addopt('nai_api_save_fragments', shared.OptionInfo(False, "Save File Fragments generated by NAI while inpainting.",gr.Checkbox, section=section))
    
    addopt('nai_api_all_images', shared.OptionInfo(False, "Include all images generated by NAI in the results.",gr.Checkbox, section=section))
        
    addopt('nai_verbose_logging', shared.OptionInfo(False, "Enable debug logging. IE Dump a bunch of garbage to the console.",gr.Checkbox, section=section))
    
    addopt('nai_query_logging', shared.OptionInfo(False, "Log NAI API Queries to console.",gr.Checkbox, section=section))
        
def DEBUG_LOG(*args,**kwargs): 
    if shared.opts.data.get('nai_verbose_logging', False): 
        print(*args,**kwargs)
        
        